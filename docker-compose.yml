version: '3.8'

services:
  # PHP service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - laravel

  # MySQL service
  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

  # Nginx service
  webserver:
    image: nginx:alpine
    container_name: laravel_webserver
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - laravel

   phpmyadmin: # used only in development for testing, be sure to don't use it in production
    image: phpmyadmin/phpmyadmin
    container_name: laravel_phpmyadmin
    environment:
      PMA_ARBITRARY: 1
      MYSQL_ROOT_PASSWORD: root
      PMA_HOST: mysql
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - laravel

  # Scheduler service
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile  # Use the same Dockerfile as 'app'
    container_name: laravel_scheduler
    restart: always
    working_dir: /var/www/
    volumes:
      - .:/var/www/
    depends_on:
      - app
    entrypoint: |
      sh -c "while [ true ]; do php /var/www/agregator-api/artisan schedule:run --verbose --no-interaction; sleep 60; done"
    networks:
      - laravel

networks:
  laravel:

volumes:
  dbdata:
  esdata:
